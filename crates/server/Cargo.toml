[package]
name = "hickory-server"

# A short blurb about the package. This is not rendered in any format when
# uploaded to crates.io (aka this is not markdown)
description = """
Hickory DNS is a safe and secure DNS server with DNSSEC support.
 Eventually this could be a replacement for BIND9. The DNSSEC support allows
 for live signing of all records, in it does not currently support
 records signed offline. The server supports dynamic DNS with SIG0 authenticated
 requests. Hickory DNS is based on the Tokio and Futures libraries, which means
 it should be easily integrated into other software that also use those
 libraries.
"""

# These URLs point to more information about the repository
documentation = "https://docs.rs/hickory-server"

# This points to a file in the repository (relative to this Cargo.toml). The
# contents of this file are stored and indexed in the registry.
readme = "README.md"

version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
homepage.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true

[features]
backtrace = ["hickory-proto/backtrace"]
dnssec-openssl = [
    "dnssec",
    "openssl",
    "hickory-proto/dnssec-openssl",
    "hickory-resolver?/dnssec-openssl",
]
dnssec-ring = [
    "dnssec",
    "hickory-proto/dnssec-ring",
    "hickory-resolver?/dnssec-ring",
]
dnssec = [
    "hickory-recursor?/dnssec",
    "serde/rc",
]
# Recursive Resolution is Experimental!
recursor = ["hickory-recursor"]
resolver = ["hickory-resolver"]
sqlite = ["rusqlite"]
toml = ["dep:toml"]

dns-over-https-rustls = [
    "hickory-proto/dns-over-https-rustls",
    "hickory-resolver?/dns-over-https-rustls",
    "dns-over-rustls",
    "dep:h2",
    "dep:http",
    "dep:tokio-rustls",
]

dns-over-openssl = [
    "dns-over-tls",
    "dnssec-openssl",
    "hickory-proto/dns-over-openssl",
    "dep:tokio-openssl",
    "hickory-resolver?/dns-over-openssl",
]
dns-over-rustls = [
    "dns-over-tls",
    "dnssec-ring",
    "dep:rustls",
    "hickory-proto/dns-over-rustls",
    "hickory-resolver?/dns-over-rustls",
    "dep:tokio-rustls",
]
dns-over-tls = []
dns-over-quic = [
    "dns-over-rustls",
    "hickory-proto/dns-over-quic",
    "hickory-resolver?/dns-over-quic",
]
dns-over-h3 = [
    "dns-over-rustls",
    "dep:h3",
    "dep:h3-quinn",
    "hickory-proto/dns-over-h3",
    "hickory-resolver?/dns-over-h3",
]

webpki-roots = ["hickory-resolver?/webpki-roots"]
native-certs = ["hickory-resolver?/native-certs"]

testing = []

[lib]
name = "hickory_server"
path = "src/lib.rs"

[dependencies]
async-trait.workspace = true
toml = { workspace = true, optional = true }
bytes.workspace = true
cfg-if.workspace = true
data-encoding.workspace = true
enum-as-inner.workspace = true
futures-util = { workspace = true, default-features = false, features = ["std"] }
h2 = { workspace = true, features = ["stream"], optional = true }
h3 = { workspace = true, optional = true }
h3-quinn = { workspace = true, optional = true }
http = { workspace = true, optional = true }
ipnet = { workspace = true, features = ["serde"] }
openssl = { workspace = true, features = ["v102", "v110"], optional = true }
prefix-trie.workspace = true
rusqlite = { workspace = true, features = ["bundled", "time"], optional = true }
rustls = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
thiserror.workspace = true
time.workspace = true
tracing.workspace = true
tokio = { workspace = true, features = ["macros", "net", "sync"] }
tokio-openssl = { workspace = true, optional = true }
tokio-rustls = { workspace = true, optional = true }
tokio-util.workspace = true
hickory-proto = { workspace = true, features = ["serde", "text-parsing", "tokio-runtime"] }
hickory-recursor = { workspace = true, features = ["serde"], optional = true }
hickory-resolver = { workspace = true, features = ["serde", "system-config", "tokio-runtime"], optional = true }

[dev-dependencies]
futures-executor = { workspace = true, default-features = false, features = ["std"] }
test-support.workspace = true
tokio = { workspace = true, features = ["macros", "rt"] }
tracing-subscriber.workspace = true

[package.metadata.docs.rs]
all-features = true
default-target = "x86_64-unknown-linux-gnu"
targets = ["x86_64-apple-darwin", "x86_64-pc-windows-msvc"]
rustdoc-args = ["--cfg", "docsrs"]

[lints]
workspace = true
