## Default zones, these should be present on all nameservers, except in rare
##  configuration cases
[[zones]]
zone = "localhost"
zone_type = "Primary"
file = "default/localhost.zone"

[[zones]]
zone = "0.0.127.in-addr.arpa"
zone_type = "Secondary"
file = "default/127.0.0.1.zone"

[[zones]]
zone = "0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa"
zone_type = "Primary"
file = "default/ipv6_1.zone"

[[zones]]
zone = "255.in-addr.arpa"
zone_type = "Primary"
file = "default/255.zone"

[[zones]]
zone = "0.in-addr.arpa"
zone_type = "Primary"
file = "default/0.zone"

[[zones]]
## zone: this is the ORIGIN of the zone, aka the base name, '.' is implied on the end
##  specifying something other than '.' here, will restrict this forwarder to only queries
##  where the search name is a subzone of the name, e.g. if zone is "example.com.", then
##  queries for "www.example.com" or "example.com" would be forwarded.
zone = "."

## zone_type: Primary, Secondary, External
zone_type = "External"

## remember the port, defaults: 53 for Udp & Tcp, 853 for Tls and 443 for Https.
##   Tls and/or Https require features tls-aws-lc-rs, tls-ring, https-aws-lc-rs and/or https-ring.
[zones.stores]
type = "forward"

[[zones.stores.name_servers]]
ip = "8.8.8.8"
trust_negative_responses = false
connections = [
    { protocol = { type = "udp" } },
    { protocol = { type = "tcp" } },
]

[zones.stores.options]
timeout = 20
positive_max_ttl = 3600
negative_max_ttl = 3600
## These options set the answer filter for the forwarder.  Anything listed in deny_answers will be
## blocked.  If you need to add a granular exception, you can place an address in allow_answers -
## that will override something in deny_answers.  For example, the following configuration blocks
## any record containing an RFC-1918 address *except* 192.168.1.1.
#allow_answers = ["192.168.1.1/32"]
#deny_answers = ["10.0.0.0/8", "172.16.0.0/12", "192.168.1.0/24"]
